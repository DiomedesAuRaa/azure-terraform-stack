name: 'Terraform Deploy'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write # Required for OIDC authentication
  contents: read

jobs:
  terraform:
    strategy:
      matrix:
        layer: ['1-foundations', '2-shared-services', '3-platform']
        environment: ['dev', 'prod']
    name: 'Terraform ${{ matrix.layer }} - ${{ matrix.environment }}'
    runs-on: ubuntu-latest
    environment: ${{ matrix.environment }}

    steps:
    - uses: actions/checkout@v3

    - name: 'Azure OIDC Login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v2

    - name: 'Terraform Init'
      run: |
        terraform init \
          -backend-config="storage_account_name=${{ secrets.AZURE_STORAGE_ACCOUNT }}" \
          -backend-config="container_name=${{ secrets.AZURE_CONTAINER_NAME }}" \
          -backend-config="key=${{ matrix.environment }}/${{ matrix.layer }}.tfstate"
      working-directory: ./${{ matrix.layer }}

    - name: 'Terraform Plan'
      run: |
        terraform plan \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -var-file="env/${{ matrix.environment }}.tfvars"
      working-directory: ./${{ matrix.layer }}

    - name: 'Terraform Apply'
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        terraform apply -auto-approve \
          -var="subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" \
          -var="tenant_id=${{ secrets.AZURE_TENANT_ID }}" \
          -var-file="env/${{ matrix.environment }}.tfvars"
      working-directory: ./${{ matrix.layer }}
